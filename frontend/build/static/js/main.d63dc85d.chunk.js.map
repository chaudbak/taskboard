{"version":3,"sources":["components/NavBar.jsx","components/Pagination.jsx","constants.jsx","components/TaskBoardHeader.jsx","components/Badges.jsx","components/TaskListItem.jsx","components/HeaderStatusFilterSelect.jsx","components/Table.jsx","components/TaskList.jsx","components/TasksStateContainer.jsx","components/dialogs/TitledDialog.jsx","components/dialogs/InfoDialog.jsx","components/dialogs/CreateEditCommons.jsx","components/dialogs/EditDialog.jsx","components/dialogs/CreateDialog.jsx","components/dialogs/DeleteDialog.jsx","components/dialogs/MarkDoneDialog.jsx","components/withDialogs.jsx","App.jsx","serviceWorker.js","index.js","utils.js"],"names":["useStyles","makeStyles","theme","appBar","textAlign","borderBottom","concat","palette","divider","toolbar","color","flexWrap","toolbarTitle","margin","flexGrow","link","spacing","profile","accountCircle","marginLeft","NavBar","props","classes","react_default","a","createElement","AppBar","position","elevation","className","Toolbar","Typography","variant","noWrap","profileUrl","Button","href","fullName","AccountCircle_default","@global","li","listStyle","containerClassName","display","pageClassName","cursor","borderRadius","verticalAlign","height","overflow","userSelect","zIndex","&:active","boxShadow","backgroundColor","blue","pageLinkClassName","fontSize","padding","lineHeight","activeClassName","activeLinkClassName","prevNextClassName","prevNextLinkClassName","disabledClassName","Pagination","pageCount","Math","ceil","count","limit","currentPage","offset","floor","dist_default","forcePage","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","breakClassName","breakLinkClassName","TASK_STATUSES","NOT_DONE","DONE","DEFAULT_LIMIT","DEFAULT_OFFSET","DEFAULT_STATUS_FILTER","taskActions","None","ShowTaskInfo","EditTask","CreateTask","DeleteTask","TaskMarkDone","StyledSearchBar","styled","SearchBar","marginBlockStart","marginBlockEnd","width","StyledAddButton","minWidth","minHeight","TaskBoardHeader","state","searchValue","_this2","this","_this$props","tasksTotalNumber","onSearchRequested","setShowDialog","Fragment","Grid","container","alignItems","justify","direction","item","xs","aria-label","onClick","Add_default","components_Pagination","value","onChange","newValue","setState","onCancelSearch","onRequestSearch","React","Component","DoneBadge","MuiBadge","boxSizing","fontWeight","NotDoneBadge","ActionsTableCell","TableCell","TaskListItem","task","data","isOwnedByUser","currentUserId","created_by","isTaskDone","status","TableRow","component","scope","Link","onTaskNameClick","name","align","caption","created_by_username","accomplished_by","status_readable","accomplished_by_username","IconButton","onTaskEditClick","Edit_default","onTaskDeleteClick","Delete_default","disabled","onTaskMarkDoneClick","Done_default","formControl","HeaderStatusFilterSelect","FormControl","Select","input","native","statusFilter","event","onStatusFilterChanged","target","OutlinedInput","Table","MuiTable","Paper","MuiPaper","maxHeight","StyledTableCell","components_Table","Table_Paper","Table_Table","size","TableHead","style","alignContent","justifyContent","components_HeaderStatusFilterSelect","TableBody","children","TaskList","taskList","_this$props2","length","map","listItem","id","key","ApiRequestor","getRequestContext","method","url","onSuccessHandler","onErrorHandler","type","dataType","context","_this","success","obj","textStatus","jqXHR","error","xhr","post","postContext","$","ajax","patch","patchContext","delete","deleteContext","TasksStateContainer","isLoaded","currentTotalNumber","onEditTask","taskId","partialData","onSuccess","onError","onEditSuccess","onRequestError","responseJSON","onCreateTask","taskData","onCreateSuccess","undefined","onDeleteTask","onDeleteSuccess","detail","onTaskMarkDone","onTaskMarkDoneSuccess","serverResponseTask","modifiedList","Object","toConsumableArray","idx","findIndex","modifiedTask","prop","unshift","splice","console","log","fetchTasks","prevProps","query","_this$props$query","queryParams","search","_this3","fetch","qs","stringify","getQueryParams","then","res","json","result","results","onTotalNumberReceived","getTaskManageFuncs","DialogContent","MuiDialogContent","flexDirection","DialogTitle","withStyles","root","closeButton","right","top","grey","onClose","disableTypography","Close_default","TitledDialog","Dialog","open","closeDialog","transitionDuration","enter","aria-labelledby","TitledDialog_DialogTitle","title","taskInformationBody","Divider","description","TaskInfoDialog","taskObject","assign","TitledDialog_DialogContent","DialogActions","StyledDialogContent","StyledErrorMessage","TaskFieldInput","_ref","field","_ref$form","form","touched","errors","objectWithoutProperties","_React$useState","useState","_React$useState2","slicedToArray","labelWidth","setLabelWidth","labelRef","useRef","useEffect","current","offsetWidth","fullWidth","InputLabel","ref","htmlFor","TaskFieldSelectStatus","_ref2","_ref2$form","TextField","label","select","SelectProps","renderFormikForm","errorText","msg","_ref3","values","dirty","isSubmitting","handleBlur","handleChange","handleSubmit","formik_esm","render","multiline","EditDialog","initialValues","objectSpread","onSubmit","actions","setSubmitting","enqueueSnackbar","serverStatus","setErrors","setStatus","CreateDialog","DialogContentText","MuiDialogContentText","TaskDeleteDialog","DeleteDialog_DialogContentText","responseText","DoneButton","borderColor","TaskMarkDoneDialog","MarkDoneDialog_DialogContentText","withDialogs","WrappedComponent","WithDialogs","_React$Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","showDialog","actionType","onDialogClose","getDialog","taskManageFuncs","DialogComponent","_this$state$showDialo","dialogProps","withSnackbar","TaskEditDialog","TaskCreateDialog","find","inherits","createClass","displayName","getDisplayName","createMuiTheme","primary","main","StyledDiv","overflowX","getQueryObject","memoizeOne","onPageChanged","selected","onTaskStatusFilterChanged","selectedValue","onTasksTotalNumberReceived","newNumber","tasks_total","current_user","profile_url","fullname","_this$state","ThemeProvider","build","anchorOrigin","vertical","horizontal","autoHideDuration","components_TaskBoardHeader","components_TasksStateContainer","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","jQuery","ajaxSetup","beforeSend","settings","test","crossDomain","csrftoken","cookieValue","cookie","cookies","split","i","trim","substring","decodeURIComponent","getCookie","setRequestHeader"],"mappings":"oZAQMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,OAAQ,CACNC,UAAW,OACXC,aAAY,aAAAC,OAAeJ,EAAMK,QAAQC,UAE3CC,QAAS,CACPC,MAAO,OACPC,SAAU,QAEZC,aAAc,CACZC,OAAQ,QACRC,SAAU,GAEZC,KAAM,CACJL,MAAO,OACPG,OAAQX,EAAMc,QAAQ,EAAG,MAE3BC,QAAS,CACPP,MAAO,QAETQ,cAAe,CACbR,MAAO,OACPS,WAAYjB,EAAMc,QAAQ,OAIf,SAASI,EAAOC,GAC7B,IAAMC,EAAUtB,IAChB,OACEuB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASjB,MAAM,UAAUkB,UAAW,EAAGC,UAAWP,EAAQnB,QACzEoB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASD,UAAWP,EAAQb,SAC1Bc,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAACJ,UAAWP,EAAQV,cAAnD,cAGAW,EAAAC,EAAAC,cAAA,aACKJ,EAAMa,YACPX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,KAAMf,EAAMa,WACZL,UAAWP,EAAQL,SAElBI,EAAMgB,SACPd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAeK,UAAWP,EAAQJ,iBAGtCK,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,KAAK,oBAAoBP,UAAWP,EAAQP,MAApD,kFC7CJf,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCqC,UAAW,CACTC,GAAI,CACFC,UAAW,SAGfC,mBAAoB,CAClBC,QAAS,OACThC,SAAU,QAEZiC,cAAe,CACbC,OAAQ,UACRF,QAAS,eACTG,aAAc,MACd1C,UAAW,SACX2C,cAAe,MACfC,OAAQ,OAERrB,SAAU,WACVsB,SAAU,SACVC,WAAY,OACZC,OAAQ,IAERC,WAAY,CACVC,UAAW,OACXC,gBAAiBC,IAAK,OAG1BC,kBAAmB,CACjBb,QAAS,eACTc,SAAU,SACVC,QAAS,SACTC,WAAY,QAEdC,gBAAiB,CACfN,gBAAiBC,IAAK,MAExBM,oBAAqB,CACnBnD,MAAO,QAEToD,kBAAmB,GACnBC,sBAAuB,GACvBC,kBAAmB,CACjBnB,OAAQ,UACRnC,MAAO,WAyCIuD,MArCf,SAAoB5C,GAClB,IAAMC,EAAUtB,IACVkE,EAAYC,KAAKC,KAAK/C,EAAMgD,MAAQhD,EAAMiD,OAC1CC,EAAgBlD,EAAMmD,OAASL,KAAKM,MAAMpD,EAAMgD,MAAQhD,EAAMmD,QAAU,EAE9E,OACEjD,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,CACEmD,UAAWJ,EACXK,cAAe,WACfC,UAAW,WACXC,WAAY,MACZZ,UAAWA,EACXa,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAc5D,EAAM4D,aACpBvC,mBAAoBpB,EAAQoB,mBAC5BE,cAAetB,EAAQsB,cACvBY,kBAAmBlC,EAAQkC,kBAC3BI,gBAAiBtC,EAAQsC,gBACzBC,oBAAqBvC,EAAQuC,oBAC7BqB,kBAAmB5D,EAAQsB,cAC3BuC,cAAe7D,EAAQsB,cACvBwC,sBAAuB9D,EAAQkC,kBAC/B6B,kBAAmB/D,EAAQkC,kBAC3B8B,eAAgBhE,EAAQsB,cACxB2C,mBAAoBjE,EAAQkC,kBAC5BQ,kBAAmB1C,EAAQ0C,qBCjFpBwB,EAAgB,CAC3BC,SAAU,EACVC,KAAM,GAGKC,EAAgB,GAChBC,EAAiB,EACjBC,EAAwB,KAExBC,EAAc,CACzBC,KAAM,EACNC,aAAc,EACdC,SAAU,EACVC,WAAY,EACZC,WAAY,EACZC,aAAc,GCNVC,EAAkBC,YAAOC,IAAPD,CAAkB,CACxCE,iBAAkB,MAClBC,eAAgB,MAChBC,MAAO,QAGHC,EAAkBL,YAAOnE,IAAPmE,CAAe,CACrCM,SAAU,MACVC,UAAW,QACXpD,SAAU,OACVC,QAAS,MA6CIoD,6MAzCbC,MAAQ,CACNC,YAAa,4EAGN,IAAAC,EAAAC,KAAAC,EAGHD,KAAK7F,MADPiD,EAFK6C,EAEL7C,MAAOE,EAFF2C,EAEE3C,OAAQ4C,EAFVD,EAEUC,iBAAkBnC,EAF5BkC,EAE4BlC,aAAcoC,EAF1CF,EAE0CE,kBAAmBC,EAF7DH,EAE6DG,cAGpE,OACE/F,EAAAC,EAAAC,cAACF,EAAAC,EAAM+F,SAAP,KACEhG,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,QAAQ,aAAaC,UAAU,OACjErG,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACbvG,EAAAC,EAAAC,cAACkF,EAAD,CACE3E,QAAQ,YACRtB,MAAM,UACNqH,aAAW,MACXC,QAAS,kBAAMV,EAAcxB,EAAYI,cAEzC3E,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,QAGJD,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,KACVV,GACD7F,EAAAC,EAAAC,cAACyG,EAAD,CAAY5D,MAAOA,EAAOE,OAAQA,EAAQH,MAAO+C,EAAkBnC,aAAcA,KAGrF1D,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACbvG,EAAAC,EAAAC,cAAC4E,EAAD,CACE8B,MAAOjB,KAAKH,MAAMC,YAClBoB,SAAU,SAAAC,GAAQ,OAAIpB,EAAKqB,SAAS,CAAEtB,YAAaqB,KACnDE,eAAgB,kBAAMlB,EAAkB,OACxCmB,gBAAiB,kBAAMnB,EAAkBJ,EAAKF,MAAMC,0BAjCpCyB,IAAMC,iHCnB9BC,GAAYrC,YAAOsC,KAAPtC,CAAiB,CACjCM,SAAU,OACVlD,QAAS,QACTtD,UAAW,SAEXyI,UAAW,aAEXC,WAAY,MACZrF,SAAU,SACVH,gBAAiB,UACjBR,aAAc,MAEdpC,MAAO,UAGHqI,GAAezC,YAAOqC,GAAPrC,CAAkB,CACrChD,gBAAiB,YCNb0F,GAAmB1C,YAAO2C,KAAP3C,CAAkB,CAEzCI,MAAO,QAGM,SAASwC,GAAa7H,GACnC,IAAM8H,EAAO9H,EAAM+H,KACbC,EAAgBhI,EAAMiI,gBAAkBH,EAAKI,WAC7CC,EAA6B,IAAhBL,EAAKM,OAExB,OACElI,EAAAC,EAAAC,cAACiI,GAAA,EAAD,KACEnI,EAAAC,EAAAC,cAACwH,GAAA,EAAD,CAAWU,UAAU,KAAKC,MAAM,OAC9BrI,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMF,UAAU,SAAS3H,QAAQ,QAAQgG,QAAS,kBAAM3G,EAAMyI,oBAC3DX,EAAKY,QAIZxI,EAAAC,EAAAC,cAACwH,GAAA,EAAD,CAAWe,MAAM,UACfzI,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYkI,QAAQ,SAASd,EAAKe,sBAEpC3I,EAAAC,EAAAC,cAACwH,GAAA,EAAD,CAAWe,MAAM,UACdb,EAAKgB,iBACJ5I,EAAAC,EAAAC,cAACF,EAAAC,EAAM+F,SAAP,KACEhG,EAAAC,EAAAC,cAACkH,GAAD,KAAYQ,EAAKiB,iBACjB7I,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYC,QAAQ,WAClBT,EAAAC,EAAAC,cAAA,QAAMI,UAAU,wBAAhB,MAAAvB,OAA8C6I,EAAKkB,8BAIvDlB,EAAKgB,iBAAmB5I,EAAAC,EAAAC,cAACsH,GAAD,KAAeI,EAAKiB,kBAEhD7I,EAAAC,EAAAC,cAACuH,GAAD,CAAkBgB,MAAM,UACrBX,GACC9H,EAAAC,EAAAC,cAACF,EAAAC,EAAM+F,SAAP,KACEhG,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAYvC,aAAW,OAAOC,QAAS,kBAAM3G,EAAMkJ,oBACjDhJ,EAAAC,EAAAC,cAAC+I,EAAAhJ,EAAD,CAAUd,MAAM,aAElBa,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAYvC,aAAW,SAASC,QAAS,kBAAM3G,EAAMoJ,sBACnDlJ,EAAAC,EAAAC,cAACiJ,EAAAlJ,EAAD,CAAYd,MAAM,cAIxBa,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAYvC,aAAW,eAAe4C,SAAUnB,EAAYxB,QAAS,kBAAM3G,EAAMuJ,wBAC/ErJ,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAD,CAAUd,MAAQ8I,EAAyB,WAAZ,wFCpDnCxJ,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC4K,YAAa,CACXjK,OAAQX,EAAMc,QAAQ,OAwBX+J,OApBf,SAAkC1J,GAChC,IAAMC,EAAUtB,KAEhB,OACEuB,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,CAAahJ,QAAQ,WAAWH,UAAWP,EAAQwJ,aACjDvJ,EAAAC,EAAAC,cAACwJ,GAAA,EAAD,CACEpJ,UAAWP,EAAQ4J,MACnBC,QAAM,EACNhD,MAAO9G,EAAM+J,aACbhD,SAAU,SAAAiD,GAAK,OAAIhK,EAAMiK,sBAAsBD,EAAME,OAAOpD,QAC5D+C,MAAO3J,EAAAC,EAAAC,cAAC+J,GAAA,EAAD,CAAe3K,OAAO,WAE7BU,EAAAC,EAAAC,cAAA,UAAQ0G,OAAQ,GAAhB,OACA5G,EAAAC,EAAAC,cAAA,UAAQ0G,MAAO,GAAf,YACA5G,EAAAC,EAAAC,cAAA,UAAQ0G,MAAO,GAAf,WChBFsD,GAAQnF,YAAOoF,KAAPpF,CAAiB,IAEzBqF,GAAQrF,YAAOsF,KAAPtF,CAAiB,CAC7BI,MAAO,MACP7F,OAAQ,OACRgL,UAAW,OACX5I,SAAU,SAGN6I,GAAkBxF,YAAO2C,KAAP3C,CAAkB,CACxChD,gBAAiB,UACjB5C,MAAO,QACP+C,SAAU,SAGGsI,GAAA,SAAU1K,GACvB,OACEE,EAAAC,EAAAC,cAACuK,GAAD,KACEzK,EAAAC,EAAAC,cAACwK,GAAD,CAAOC,KAAK,SACV3K,EAAAC,EAAAC,cAAC0K,GAAA,EAAD,KACE5K,EAAAC,EAAAC,cAACiI,GAAA,EAAD,KACEnI,EAAAC,EAAAC,cAACqK,GAAD,aACAvK,EAAAC,EAAAC,cAACqK,GAAD,CAAiB9B,MAAM,UAAvB,SACAzI,EAAAC,EAAAC,cAACqK,GAAD,CAAiB9B,MAAM,UACrBzI,EAAAC,EAAAC,cAAA,OACE2K,MAAO,CACLzJ,QAAS,OACT+E,WAAY,SACZ2E,aAAc,SACdC,eAAgB,WAGlB/K,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC8K,GAAD,CACEnB,aAAc/J,EAAM+J,aACpBE,sBAAuBjK,EAAMiK,0BAInC/J,EAAAC,EAAAC,cAACqK,GAAD,CAAiB9B,MAAM,UAAvB,aAGJzI,EAAAC,EAAAC,cAAC+K,GAAA,EAAD,KAAYnL,EAAMoL,aClBXC,oLA3BJ,IACCC,EAAazF,KAAK7F,MAAlBsL,SADDxF,EAEiCD,KAAK7F,MAArCiI,EAFDnC,EAECmC,cAAe8B,EAFhBjE,EAEgBiE,aAFhBwB,EAG0C1F,KAAK7F,MAA9CiK,EAHDsB,EAGCtB,sBAAuBhE,EAHxBsF,EAGwBtF,cAE/B,OACE/F,EAAAC,EAAAC,cAACF,EAAAC,EAAM+F,SAAP,KACEhG,EAAAC,EAAAC,cAACsK,GAAD,CAAeX,aAAcA,EAAcE,sBAAuBA,GAC/DqB,EAASE,OAAS,GACdF,EAASG,IAAI,SAAAC,GAAQ,OACtBxL,EAAAC,EAAAC,cAACyH,GAAD,CACE8D,GAAID,EAASC,GACbC,IAAKF,EAASC,GACd5D,KAAM2D,EACNzD,cAAeA,EACfQ,gBAAiB,kBAAMxC,EAAcxB,EAAYE,aAAc+G,EAASC,KACxEzC,gBAAiB,kBAAMjD,EAAcxB,EAAYG,SAAU8G,EAASC,KACpEvC,kBAAmB,kBAAMnD,EAAcxB,EAAYK,WAAY4G,EAASC,KACxEpC,oBAAqB,kBAAMtD,EAAcxB,EAAYM,aAAc2G,EAASC,kBAnBrEvE,IAAMC,yCCCvBwE,oDACJC,kBAAoB,SAACC,EAAQC,EAAKjE,EAAMkE,EAAkBC,GAAtC,MAA0D,CAC5EC,KAAMJ,EACNK,SAAU,OACVJ,MACAjE,OACAsE,QAASC,EACTC,QAAS,SAACC,EAAKC,EAAYC,GAAlB,OAA4BT,EAAiBO,IACtDG,MAAO,SAACC,EAAKH,EAAYE,GAAlB,OAA4BT,EAAeU,EAAKH,EAAYE,WAGrEE,KAAO,SAACb,EAAKjE,EAAMkE,EAAkBC,GACnC,IAAMY,EAAcR,EAAKR,kBAAkB,OAAQE,EAAKjE,EAAMkE,EAAkBC,GAChFa,IAAEC,KAAKF,SAGTG,MAAQ,SAACjB,EAAKjE,EAAMkE,EAAkBC,GACpC,IAAMgB,EAAeZ,EAAKR,kBAAkB,QAASE,EAAKjE,EAAMkE,EAAkBC,GAClFa,IAAEC,KAAKE,SAGTC,OAAS,SAACnB,EAAKC,EAAkBC,GAC/B,IAAMkB,EAAgBd,EAAKR,kBAAkB,SAAUE,EAAmB,GAAIC,EAAkBC,GAChGa,IAAEC,KAAKI,KA+KIC,8MAhKb3H,MAAQ,CACN4H,UAAU,EACVhC,SAAU,GACViC,mBAAoB,KAatBC,WAAa,SAACC,EAAQC,EAAaC,EAAWC,IAChC,IAAI/B,IACZoB,MAAJ,cAAAhO,OACgBwO,EADhB,KAEEC,EACA,SAAC5F,GACClC,EAAKiI,cAAcJ,EAAQ3F,GAC3B6F,EAAU7F,IAEZ,SAAC8E,EAAKH,EAAYE,GAChB/G,EAAKkI,eAAeL,EAAQb,EAAIxE,OAAQuE,GACxCiB,EAAQhB,EAAIxE,OAAQuE,EAAOC,EAAImB,mBAKrCC,aAAe,SAACC,EAAUN,EAAWC,IACvB,IAAI/B,IACZgB,KACF,cACAoB,EACA,SAACnG,GACClC,EAAKsI,gBAAgBpG,GACrB6F,EAAU7F,IAEZ,SAAC8E,EAAKH,EAAYE,GAChB/G,EAAKkI,oBAAeK,EAAWvB,EAAIxE,OAAQuE,GAC3CiB,EAAQhB,EAAIxE,OAAQuE,EAAOC,EAAImB,mBAKrCK,aAAe,SAACX,EAAQE,EAAWC,IACrB,IAAI/B,IACZsB,OAAJ,cAAAlO,OACgBwO,EADhB,KAEE,WACE7H,EAAKyI,gBAAgBZ,GACrBE,KAEF,SAACf,EAAKH,EAAYE,GAChB/G,EAAKkI,eAAeL,EAAQb,EAAIxE,OAAQuE,GACxCiB,EAAQhB,EAAIxE,OAAQuE,EAAOC,EAAImB,aAAaO,aAKlDC,eAAiB,SAACd,EAAQE,EAAWC,IACvB,IAAI/B,IACZoB,MAAJ,cAAAhO,OACgBwO,EADhB,KAEE,CAAErF,OAAQjE,EAAcE,MACxB,SAACyD,GACClC,EAAK4I,sBAAsBf,EAAQ3F,GACnC6F,EAAU7F,IAEZ,SAAC8E,EAAKH,EAAYE,GAChB/G,EAAKkI,eAAeL,EAAQb,EAAIxE,OAAQuE,GACxCiB,EAAQhB,EAAIxE,OAAQuE,EAAOC,EAAImB,mBA+CrCF,cAAgB,SAACJ,EAAQgB,GACvB,IAAMC,EAAYC,OAAAC,GAAA,EAAAD,CAAO/I,EAAKF,MAAM4F,UAC9BuD,EAAMH,EAAaI,UAAU,SAAAhH,GAAI,OAAIA,EAAK6D,KAAO8B,IACjDsB,EAAeL,EAAaG,GAElC,IAAK,IAAMG,KAAQP,EACjBM,EAAaC,GAAQP,EAAmBO,GAG1CpJ,EAAKqB,SAAS,CAAEqE,SAAUoD,OAG5BR,gBAAkB,SAACO,GACjB,IAAIC,EAAYC,OAAAC,GAAA,EAAAD,CAAO/I,EAAKF,MAAM4F,UAClCoD,EAAaO,QAAQR,GACrB7I,EAAKqB,SAAS,CAAEqE,SAAUoD,OAG5BL,gBAAkB,SAACZ,GACjB,IAAIiB,EAAYC,OAAAC,GAAA,EAAAD,CAAO/I,EAAKF,MAAM4F,UAC5BuD,EAAMH,EAAaI,UAAU,SAAAhH,GAAI,OAAIA,EAAK6D,KAAO8B,IAEvDiB,EAAaQ,OAAOL,EAAK,GACzBjJ,EAAKqB,SAAS,CAAEqE,SAAUoD,OAG5BF,sBAAwB,SAACf,EAAQgB,GAC/B,OAAO7I,EAAKiI,cAAcJ,EAAQgB,MAGpCX,eAAiB,SAACL,EAAQrF,EAAQuE,GAChCwC,QAAQC,IAAIhH,EAAQuE,uFAjJpB9G,KAAKwJ,wDAGYC,GACbA,EAAUC,QAAU1J,KAAK7F,MAAMuP,OACjC1J,KAAKwJ,0DAoEP,MAAO,CACL7B,WAAY3H,KAAK2H,WACjBQ,aAAcnI,KAAKmI,aACnBI,aAAcvI,KAAKuI,aACnBG,eAAgB1I,KAAK0I,yDAIR,IAAAiB,EAGX3J,KAAK7F,MAAMuP,MADb5J,EAFa6J,EAEb7J,YAAa1C,EAFAuM,EAEAvM,MAAOE,EAFPqM,EAEOrM,OAAQ4G,EAFfyF,EAEezF,aAExB0F,EAAc,CAAExM,QAAOE,UAQ7B,MAPqB,OAAjB4G,IACF0F,EAAYrH,OAAS2B,GAEnBpE,IACF8J,EAAYC,OAAS/J,GAGhB8J,uCAGI,IAAAE,EAAA9J,KACX+J,MAAK,cAAA3Q,OAAe4Q,KAAGC,UAAUjK,KAAKkK,oBACnCC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAACG,GACCR,EAAK1I,SACH,CACEqG,UAAU,EACVhC,SAAU6E,EAAOC,QACjB7C,mBAAoB4C,EAAOnN,OAE7B,kBAAM2M,EAAK3P,MAAMqQ,sBAAsBF,EAAOnN,UAGlD,SAAA2J,GAAK,OAAIgD,EAAK1I,SAAS,CAAEqG,UAAU,EAAOX,6CAuC9C,OAAO9G,KAAK7F,MAAMoL,SAASvF,KAAKyK,qBAAsBzK,KAAKH,MAAM4F,iBAvKnClE,IAAMC,0FCzB3BkJ,GAAgBtL,YAAOuL,KAAPvL,CAAyB,CACpD3D,QAAS,OACTmP,cAAe,SACfxF,eAAgB,eAChB1F,SAAU,SAgBNmL,GAAcC,aAbL,SAAA9R,GAAK,MAAK,CACvB+R,KAAM,CACJpR,OAAQ,EACR6C,QAASxD,EAAMc,QAAQ,IAEzBkR,YAAa,CACXvQ,SAAU,WACVwQ,MAAOjS,EAAMc,QAAQ,GACrBoR,IAAKlS,EAAMc,QAAQ,GACnBN,MAAOR,EAAMK,QAAQ8R,KAAK,QAIVL,CAAmB,SAAC3Q,GAAU,IACxCoL,EAA+BpL,EAA/BoL,SAAUnL,EAAqBD,EAArBC,QAASgR,EAAYjR,EAAZiR,QAC3B,OACE/Q,EAAAC,EAAAC,cAACsQ,GAAA,EAAD,CAAgBQ,mBAAiB,EAAC1Q,UAAWP,EAAQ2Q,MACnD1Q,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYC,QAAQ,MAAMyK,GAC1BlL,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAYvC,aAAW,QAAQlG,UAAWP,EAAQ4Q,YAAalK,QAASsK,GACtE/Q,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,UAMOiR,GAAA,SAAApR,GAAK,OAClBE,EAAAC,EAAAC,cAACiR,GAAA,EAAD,CAAQC,MAAI,EAACL,QAASjR,EAAMuR,YAAaC,mBAAoB,CAAEC,MAAO,IAAMC,kBAAgB,qBAC1FxR,EAAAC,EAAAC,cAACuR,GAAD,CAAahG,GAAG,0BAA0BsF,QAASjR,EAAMuR,aACtDvR,EAAM4R,OAER5R,EAAMoL,WCtCEyG,GAAsB,SAAA/J,GAAI,OACrC5H,EAAAC,EAAAC,cAACF,EAAAC,EAAM+F,SAAP,KACEhG,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYC,QAAQ,QAAQ2H,UAAU,OACpCpI,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,mBACC,IACA0H,EAAKY,OAGVxI,EAAAC,EAAAC,cAAC0R,GAAA,EAAD,MACA5R,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYC,QAAQ,QAAQ2H,UAAU,OACpCpI,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,yBACC,IACA0H,EAAKe,qBAER3I,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,qBACC0H,EAAKgB,iBAAmB5I,EAAAC,EAAAC,cAACkH,GAAD,KAAYQ,EAAKiB,kBACxCjB,EAAKgB,iBAAmB5I,EAAAC,EAAAC,cAACsH,GAAD,KAAeI,EAAKiB,mBAGlD7I,EAAAC,EAAAC,cAAC0R,GAAA,EAAD,MACA5R,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYC,QAAQ,QAAQ2H,UAAU,OACpCpI,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,0BACC,IACA0H,EAAKiK,gBAMC,SAASC,GAAehS,GAAO,IACxB8H,EAAS9H,EAArBiS,WAER,OACE/R,EAAAC,EAAAC,cAACgR,GAADzC,OAAAuD,OAAA,CAAcN,MAAM,oBAAuB5R,GACzCE,EAAAC,EAAAC,cAAC+R,GAAD,KAAgBN,GAAoB/J,IACpC5H,EAAAC,EAAAC,cAACgS,GAAA,EAAD,KACElS,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQH,QAAQ,WAAWgG,QAAS3G,EAAMuR,YAAalS,MAAM,WAA7D,uECnCKgT,GAAsBpN,YAAOuL,KAAPvL,CAAyB,CAC1D3D,QAAS,OACTmP,cAAe,SACfxF,eAAgB,eAChB1F,SAAU,OACV3D,SAAU,YAIC0Q,GAAqBrN,YAAO,MAAPA,CAAc,CAC9CzF,OAAQ,WACRH,MAAO,MACP+C,SAAU,UAGNzD,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC4K,YAAa,CACXjK,OAAQ,YAIN+S,GAAiB,SAAAC,GAIjB,IAHJC,EAGID,EAHJC,MAGIC,EAAAF,EAFJG,KACG3S,GACC0S,EAFIE,QAEJF,EAFaG,OAEblE,OAAAmE,GAAA,EAAAnE,CAAA6D,EAAA,mBAAAO,EACgC3L,IAAM4L,SAAS,GAD/CC,EAAAtE,OAAAuE,GAAA,EAAAvE,CAAAoE,EAAA,GACGI,EADHF,EAAA,GACeG,EADfH,EAAA,GAEEI,EAAWjM,IAAMkM,OAAO,MACxBrT,EAAUtB,KAMhB,OAJAyI,IAAMmM,UAAU,WACdH,EAAcC,EAASG,QAAQC,cAC9B,IAGDvT,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,CAAanJ,UAAWP,EAAQwJ,YAAa9I,QAAQ,WAAW+S,WAAS,GACvExT,EAAAC,EAAAC,cAACuT,GAAA,EAAD,CAAYC,IAAKP,EAAUQ,QAAQ,sBAChC7T,EAAM4R,OAET1R,EAAAC,EAAAC,cAAC+J,GAAA,EAADwE,OAAAuD,OAAA,CAAevG,GAAG,qBAAqBwH,WAAYA,GAAgBV,EAAWzS,MAK9E8T,GAAwB,SAAAC,GAIxB,IAHJtB,EAGIsB,EAHJtB,MAGIuB,EAAAD,EAFJpB,KACG3S,GACCgU,EAFIpB,QAEJoB,EAFanB,OAEblE,OAAAmE,GAAA,EAAAnE,CAAAoF,EAAA,mBACE9T,EAAUtB,KAEhB,OACEuB,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,CAAanJ,UAAWP,EAAQwJ,YAAa9I,QAAQ,WAAW+S,WAAS,GACvExT,EAAAC,EAAAC,cAAC6T,GAAA,EAADtF,OAAAuD,OAAA,CACEgC,MAAOlU,EAAM4R,MACbuC,QAAM,EACNC,YAAa,CACXtK,QAAQ,GAEVnJ,QAAQ,YACJ8R,EACAzS,GAEJE,EAAAC,EAAAC,cAAA,UAAQwL,IAAK,EAAG9E,MAAO3C,EAAcC,UAArC,YAGAlE,EAAAC,EAAAC,cAAA,UAAQwL,IAAK,EAAG9E,MAAO3C,EAAcE,MAArC,WAQD,SAASgQ,GAAiBrU,GAC/B,IAAMsU,EAAY,SAAAC,GAAG,OAAIrU,EAAAC,EAAAC,cAACkS,GAAD,KAAqBiC,IAC9C,OAAO,SAAAC,KACLC,OADKD,EACG3B,OADH,IACW6B,EADXF,EACWE,MAAOtM,EADlBoM,EACkBpM,OAAyDuM,GAD3EH,EAC0B5B,QAD1B4B,EACmCI,WADnCJ,EAC+CK,aAD/CL,EAC6DM,aAD7DN,EAC2EG,cAD3E,OAGLzU,EAAAC,EAAAC,cAAC2U,GAAA,EAAD,KACE7U,EAAAC,EAAAC,cAACiS,GAAD,KACGjK,GAAUA,EAAOuE,OAASzM,EAAAC,EAAAC,cAAA,OAAK2K,MAAO,CAAE1L,MAAO,QAAU+I,EAAOmM,KACjErU,EAAAC,EAAAC,cAAC2U,GAAA,EAAD,CAAO5I,KAAK,OAAOzD,KAAK,OAAOkJ,MAAM,OAAOtJ,UAAWiK,KACvDrS,EAAAC,EAAAC,cAAC2U,GAAA,EAAD,CAAcrM,KAAK,OAAOsM,OAAQV,IAClCpU,EAAAC,EAAAC,cAAC2U,GAAA,EAAD,CAAO5I,KAAK,OAAOzD,KAAK,SAASkJ,MAAM,SAAStJ,UAAWwL,KAC3D5T,EAAAC,EAAAC,cAAC2U,GAAA,EAAD,CAAcrM,KAAK,SAASsM,OAAQV,IACpCpU,EAAAC,EAAAC,cAAC2U,GAAA,EAAD,CAAOE,WAAS,EAAC9I,KAAK,OAAOzD,KAAK,cAAckJ,MAAM,cAActJ,UAAWiK,KAC/ErS,EAAAC,EAAAC,cAAC2U,GAAA,EAAD,CAAcrM,KAAK,cAAcsM,OAAQV,KAE3CpU,EAAAC,EAAAC,cAACgS,GAAA,EAAD,KACElS,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQH,QAAQ,WAAWwL,KAAK,SAAS9M,MAAM,UAAUiK,SAAUqL,IAAiBD,GAApF,SAGAxU,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQH,QAAQ,WAAWtB,MAAM,YAAYsH,QAAS3G,EAAMuR,aAA5D,iBC7DO2D,oLAtCJ,IACClV,EAAU6F,KAAV7F,MAER,OACEE,EAAAC,EAAAC,cAACgR,GAADzC,OAAAuD,OAAA,CAAcN,MAAM,aAAgB5R,GAClCE,EAAAC,EAAAC,cAAC2U,GAAA,EAAD,CACEI,cAAaxG,OAAAyG,GAAA,EAAAzG,CAAA,GAAO3O,EAAMiS,YAC1BoD,SAAU,SAACZ,EAAQa,GAAY,IACrB5M,EAA8B+L,EAA9B/L,KAAMN,EAAwBqM,EAAxBrM,OAAQ2J,EAAgB0C,EAAhB1C,YACtB/R,EAAMwN,WACJxN,EAAMiS,WAAWtG,GACjB,CAAEjD,OAAMN,SAAQ2J,eAEhB,SAAChK,GACCuN,EAAQC,eAAc,GACtBvV,EAAMwV,gBAAN,SAAAvW,OAA+ByJ,EAA/B,cAAiD,CAAE/H,QAAS,YAC5DX,EAAMuR,eAGR,SAACkE,EAAc9I,EAAOoB,GACpBuH,EAAQC,eAAc,GACtBD,EAAQI,UAAU3H,GACd0H,EAAe,KACjBH,EAAQK,UAAU,CAChBhJ,OAAO,EACP4H,IAAG,SAAAtV,OAAWwW,EAAX,MAAAxW,OAA4B0N,QAMzCqI,OAAQX,GAAiBrU,aAhCVoH,IAAMC,WCuChBuO,oLArCJ,IACC5V,EAAU6F,KAAV7F,MAER,OACEE,EAAAC,EAAAC,cAACgR,GAADzC,OAAAuD,OAAA,CAAcN,MAAM,mBAAsB5R,GACxCE,EAAAC,EAAAC,cAAC2U,GAAA,EAAD,CACEI,cAAe,CAAE/M,OAAQjE,EAAcC,SAAUsE,KAAM,GAAIqJ,YAAa,IACxEsD,SAAU,SAACZ,EAAQa,GAAY,IACrB5M,EAA8B+L,EAA9B/L,KAAMN,EAAwBqM,EAAxBrM,OAAQ2J,EAAgB0C,EAAhB1C,YACtB/R,EAAMgO,aACJ,CAAEtF,OAAMN,SAAQ2J,eAEhB,SAAChK,GACCuN,EAAQC,eAAc,GACtBvV,EAAMwV,gBAAN,SAAAvW,OAA+B8I,EAAKW,KAApC,cAAsD,CAAE/H,QAAS,YACjEX,EAAMuR,eAGR,SAACkE,EAAc9I,EAAOoB,GACpBuH,EAAQC,eAAc,GACtBD,EAAQI,UAAU3H,GACd0H,EAAe,KACjBH,EAAQK,UAAU,CAChBhJ,OAAO,EACP4H,IAAG,SAAAtV,OAAWwW,EAAX,MAAAxW,OAA4B0N,QAMzCqI,OAAQX,GAAiBrU,aA/BRoH,IAAMC,qBCC3BwO,GAAoB5Q,YAAO6Q,KAAP7Q,CAA6B,CACrD5F,MAAO,QAGM,SAAS0W,GAAiB/V,GAAO,IAC1B8H,EAAS9H,EAArBiS,WAER,OACE/R,EAAAC,EAAAC,cAACgR,GAADzC,OAAAuD,OAAA,CAAcN,MAAM,eAAkB5R,GACpCE,EAAAC,EAAAC,cAAC+R,GAAD,KACEjS,EAAAC,EAAAC,cAAC4V,GAAD,mDACCnE,GAAoB/J,IAEvB5H,EAAAC,EAAAC,cAACgS,GAAA,EAAD,KACElS,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEH,QAAQ,WACRtB,MAAM,YACNsH,QAAS,WAGP3G,EAAMuR,cACNvR,EAAMoO,aACJpO,EAAMiS,WAAWtG,GAEjB,WACE3L,EAAMwV,gBAAN,SAAAvW,OAA+B6I,EAAKY,KAApC,cAAsD,CAAE/H,QAAS,aAGnE,SAAC8U,EAAc9I,EAAOsJ,GACpBjW,EAAMwV,gBAAN,SAAAvW,OAA+BwW,EAA/B,MAAAxW,OAAgD0N,EAAhD,MAAA1N,OAA0DgX,GAAgB,CAAEtV,QAAS,cAf7F,UAsBAT,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQH,QAAQ,WAAWwL,KAAK,SAAS9M,MAAM,UAAUsH,QAAS3G,EAAMuR,aAAxE,YCpCR,IAAMsE,GAAoB5Q,YAAO6Q,KAAP7Q,CAA6B,CACrD5F,MAAO,YAGH6W,GAAajR,YAAOnE,IAAPmE,CAAe,CAChC5F,MAAO,UACP8W,YAAa,YAGA,SAASC,GAAmBpW,GAAO,IAC5B8H,EAAS9H,EAArBiS,WAER,OACE/R,EAAAC,EAAAC,cAACgR,GAADzC,OAAAuD,OAAA,CAAcN,MAAM,gBAAmB5R,GACrCE,EAAAC,EAAAC,cAAC+R,GAAD,KACEjS,EAAAC,EAAAC,cAACiW,GAAD,kEACCxE,GAAoB/J,IAEvB5H,EAAAC,EAAAC,cAACgS,GAAA,EAAD,KACElS,EAAAC,EAAAC,cAAC8V,GAAD,CACEvV,QAAQ,WACRgG,QAAS,WAGP3G,EAAMuR,cACNvR,EAAMuO,eACJvO,EAAMiS,WAAWtG,GAEjB,WACE3L,EAAMwV,gBAAN,SAAAvW,OAA+B6I,EAAKY,KAApC,sBAA8D,CAAE/H,QAAS,aAG3E,SAAC8U,EAAc9I,EAAOsJ,GACpBjW,EAAMwV,gBAAN,SAAAvW,OAA+BwW,EAA/B,MAAAxW,OAAgD0N,EAAhD,MAAA1N,OAA0DgX,GAAgB,CAAEtV,QAAS,cAd7F,QAqBAT,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQH,QAAQ,WAAWwL,KAAK,SAASxF,QAAS3G,EAAMuR,aAAxD,YChCR,IA4Ee+E,GA5EK,SAACC,GAAqB,IAClCC,EADkC,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAApK,EAAAqC,OAAAgI,EAAA,EAAAhI,CAAA9I,KAAA2Q,GAAA,QAAAI,EAAAC,UAAArL,OAAAsL,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAA1K,EAAAqC,OAAAsI,EAAA,EAAAtI,CAAA9I,MAAA6Q,EAAA/H,OAAAuI,EAAA,EAAAvI,CAAA6H,IAAAW,KAAAC,MAAAV,EAAA,CAAA7Q,MAAA5G,OAAA6X,MAEtCpR,MAAQ,CACN2R,WAAY,CACVC,WAAY7S,EAAYC,KACxB+I,YAAQU,IAL0B7B,EAStCrG,cAAgB,SAACqR,EAAY7J,GAC3BnB,EAAKrF,SAAS,CACZoQ,WAAY,CAAEC,aAAY7J,aAXQnB,EAetCiL,cAAgB,WACdjL,EAAKrF,SAAS,CAAEoQ,WAAY,MAhBQ/K,EAmBtCkL,UAAY,SAACC,EAAiBnM,GAAa,IAQrCoM,EARqCC,EAGVrL,EAAK5G,MAAM2R,WAAlCC,EAHiCK,EAGjCL,WAAY7J,EAHqBkK,EAGrBlK,OACpB,IAAK6J,EACH,OAAO,KAIT,IAAMM,EAAc,CAClBrG,YAAajF,EAAKiL,eAGpB,OAAQD,GACN,KAAK7S,EAAYM,aACf2S,EAAkBG,uBAAazB,IAC/BwB,EAAYrJ,eAAiBkJ,EAAgBlJ,eAC7C,MACF,KAAK9J,EAAYK,WACf4S,EAAkBG,uBAAa9B,IAC/B6B,EAAYxJ,aAAeqJ,EAAgBrJ,aAC3C,MACF,KAAK3J,EAAYE,aACf+S,EAAkB1F,GAClB,MACF,KAAKvN,EAAYG,SACf8S,EAAkBG,uBAAaC,IAC/BF,EAAYpK,WAAaiK,EAAgBjK,WACzC,MACF,KAAK/I,EAAYI,WACf6S,EAAkBG,uBAAaE,IAC/BH,EAAY5J,aAAeyJ,EAAgBzJ,aAC3C,MACF,QACE0J,EAAkB,KAGtB,OAAKA,GAIDA,GAAmBjK,IACrBmK,EAAY3F,WAAa3G,EAAS0M,KAAK,SAAAlQ,GAAI,OAAIA,EAAK6D,KAAO8B,KAGtDvN,EAAAC,EAAAC,cAACsX,EAAoBE,IAPnB,MAzD2BtL,EAAA,OAAAqC,OAAAsJ,EAAA,EAAAtJ,CAAA6H,EAAAC,GAAA9H,OAAAuJ,EAAA,EAAAvJ,CAAA6H,EAAA,EAAA5K,IAAA,SAAA9E,MAAA,WAoEpC,OAAO5G,EAAAC,EAAAC,cAACmW,EAAD5H,OAAAuD,OAAA,CAAkBjM,cAAeJ,KAAKI,cAAeuR,UAAW3R,KAAK2R,WAAe3R,KAAK7F,YApE5DwW,EAAA,CACdpP,IAAMC,WAwEhC,OADAmP,EAAY2B,YAAZ,WAAAlZ,OA/EF,SAAwBsX,GACtB,OAAOA,EAAiB4B,aAAe5B,EAAiB7N,MAAQ,YA8E3B0P,CAAe7B,GAApD,KACOC,GC3EH3X,GAAQwZ,YAAe,CAC3BnZ,QAAS,CACPoZ,QAAS,CAAEC,KAAMrW,IAAK,SAIpBsW,GAAYvT,YAAO,MAAPA,CAAc,CAC9BI,MAAO,MACP7F,OAAQ,OACRiZ,UAAW,OACXpW,QAAS,QAGLqW,GAAiBC,YAAW,SAAChT,EAAa1C,EAAOE,EAAQ4G,GAA7B,MAA+C,CAC/EpE,cACA1C,QACAE,SACA4G,kBA8GauM,iNA1Gb5Q,MAAQ,CACNuC,cAAe,KACfpH,WAAY,GACZG,SAAU,GACV+E,iBAAkB,EAClB9C,MAAOqB,EACPnB,OAAQoB,EACRwF,aAAcvF,EACdmB,YAAa,MAmBfiT,cAAgB,SAAC7Q,GACf,IAAM5E,EAASL,KAAKC,KAAKgF,EAAK8Q,SAAWvM,EAAK5G,MAAMzC,OACpDqJ,EAAKrF,SAAS,CAAE9D,cAGlB2V,0BAA4B,SAACC,GACvBzM,EAAK5G,MAAMqE,eAAiBgP,GAC9BzM,EAAKrF,SAAS,CACZhE,MAAOqB,EACPnB,OAAQoB,EACRwF,aAAcgP,OAKpB/S,kBAAoB,SAACc,GACfwF,EAAK5G,MAAMC,cAAgBmB,GAC7BwF,EAAKrF,SAAS,CACZtB,YAAamB,EACb7D,MAAOqB,EACPnB,OAAQoB,EACRwF,aAAcvF,OAKpBwU,2BAA6B,SAACC,GACxB3M,EAAK5G,MAAMK,mBAAqBkT,GAClC3M,EAAKrF,SAAS,CAAElB,iBAAkBkT,wFA5ClB,IAAArT,EAAAC,KAClB+J,MAAM,gBACHI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAACG,GACCvK,EAAKqB,SAAS,CACZlB,iBAAkBoK,EAAO+I,YACzBjR,cAAekI,EAAOgJ,aACtBtY,WAAYsP,EAAOiJ,YACnBpY,SAAUmP,EAAOkJ,YAGrB,SAAA1M,GAAK,OAAI/G,EAAKqB,SAAS,CAAE0F,6CAoCtB,IAAAgD,EAAA9J,KAAAyT,EAIHzT,KAAKH,MAFPC,EAFK2T,EAEL3T,YAAa1C,EAFRqW,EAEQrW,MAAOE,EAFfmW,EAEenW,OAAQ4C,EAFvBuT,EAEuBvT,iBAAkBkC,EAFzCqR,EAEyCrR,cAAe8B,EAFxDuP,EAEwDvP,aAC7DlJ,EAHKyY,EAGLzY,WAAYG,EAHPsY,EAGOtY,SAHP8E,EAM8BD,KAAK7F,MAAlCiG,EANDH,EAMCG,cAAeuR,EANhB1R,EAMgB0R,UAEvB,OACEtX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAACmZ,EAAA,EAAD,CAAe1a,MAAOA,IACpBqB,EAAAC,EAAAC,cAACoZ,EAAA,iBAAD,CAAkBC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAAWC,iBAAkB,KAC1F1Z,EAAAC,EAAAC,cAACL,EAAD,CAAQc,WAAYA,EAAYG,SAAUA,IAC1Cd,EAAAC,EAAAC,cAACoY,GAAD,KACEtY,EAAAC,EAAAC,cAACyZ,EAAD,CACE9T,iBAAkBA,EAClB9C,MAAOA,EACPE,OAAQA,EACRS,aAAciC,KAAK+S,cACnB5S,kBAAmBH,KAAKG,kBACxBC,cAAeA,IAEjB/F,EAAAC,EAAAC,cAAC0Z,GAAD,CACEvK,MAAOmJ,GAAe/S,EAAa1C,EAAOE,EAAQ4G,GAClDsG,sBAAuBxK,KAAKmT,4BAE3B,SAACvB,EAAiBnM,GAAlB,OACCpL,EAAAC,EAAAC,cAACF,EAAAC,EAAM+F,SAAP,KACEhG,EAAAC,EAAAC,cAAC2Z,GAAD,CACEzO,SAAUA,EACVrD,cAAeA,EACf8B,aAAcA,EACdE,sBAAuB0F,EAAKmJ,0BAC5B7S,cAAeA,IAEhBuR,EAAUC,EAAiBnM,iBA/F9BlE,IAAMC,YCtBJ2S,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASrF,OAAO9U,EAAAC,EAAAC,cAACka,GAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3K,KAAK,SAAA4K,GACjCA,EAAaC,eCnHnBC,IAAOC,UAAU,CAEfC,WCSa,SAAuBpO,EAAKqO,GACzC,GAtBsBlP,EAsBFkP,EAAS9O,MApBtB,8BAA8B+O,KAAKnP,KAoBHlG,KAAKsV,YAAa,CAIvD,IAAMC,EArBV,SAAmB1S,GACjB,IAAI2S,EAAc,KAClB,GAAId,SAASe,QAA6B,IAAnBf,SAASe,OAE9B,IADA,IAAIC,EAAUhB,SAASe,OAAOE,MAAM,KAC3BC,EAAI,EAAGA,EAAIF,EAAQ/P,OAAQiQ,IAAK,CACvC,IAAIH,EAASvO,IAAE2O,KAAKH,EAAQE,IAE5B,GAAIH,EAAOK,UAAU,EAAGjT,EAAK8C,OAAS,IAAM9C,EAAO,IAAK,CACtD2S,EAAcO,mBAAmBN,EAAOK,UAAUjT,EAAK8C,OAAS,IAChE,OAIN,OAAO6P,EAQaQ,CAAU,aAC5BjP,EAAIkP,iBAAiB,cAAeV,GA3BxC,IAAwBrP","file":"static/js/main.d63dc85d.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    textAlign: 'left',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    color: '#777',\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    margin: '0 4em',\n    flexGrow: 1,\n  },\n  link: {\n    color: '#777',\n    margin: theme.spacing(1, 1.5),\n  },\n  profile: {\n    color: '#777',\n  },\n  accountCircle: {\n    color: '#777',\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function NavBar(props) {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" noWrap className={classes.toolbarTitle}>\n          Task Board\n        </Typography>\n        <nav>\n          {!!props.profileUrl && (\n            <Button\n              href={props.profileUrl}\n              className={classes.profile}\n            >\n              {props.fullName}\n              <AccountCircle className={classes.accountCircle} />\n            </Button>\n          )}\n          <Button href=\"/accounts/logout/\" className={classes.link}>\n            Sign Out\n          </Button>\n        </nav>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    li: {\n      listStyle: 'none',\n    },\n  },\n  containerClassName: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  pageClassName: {\n    cursor: 'pointer',\n    display: 'inline-block',\n    borderRadius: '2px',\n    textAlign: 'center',\n    verticalAlign: 'top',\n    height: '30px',\n\n    position: 'relative',\n    overflow: 'hidden',\n    userSelect: 'none',\n    zIndex: '1',\n\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: blue[800],\n    },\n  },\n  pageLinkClassName: {\n    display: 'inline-block',\n    fontSize: '1.2rem',\n    padding: '0 10px',\n    lineHeight: '30px',\n  },\n  activeClassName: {\n    backgroundColor: blue[300],\n  },\n  activeLinkClassName: {\n    color: '#fff',\n  },\n  prevNextClassName: {},\n  prevNextLinkClassName: {},\n  disabledClassName: {\n    cursor: 'default',\n    color: '#999',\n  },\n}));\n\nfunction Pagination(props) {\n  const classes = useStyles();\n  const pageCount = Math.ceil(props.count / props.limit);\n  const currentPage = !!props.offset ? Math.floor(props.count / props.offset) : 0;\n\n  return (\n    <ReactPaginate\n      forcePage={currentPage}\n      previousLabel={' ← '}\n      nextLabel={' → '}\n      breakLabel={'...'}\n      pageCount={pageCount}\n      marginPagesDisplayed={2}\n      pageRangeDisplayed={5}\n      onPageChange={props.onPageChange}\n      containerClassName={classes.containerClassName}\n      pageClassName={classes.pageClassName}\n      pageLinkClassName={classes.pageLinkClassName}\n      activeClassName={classes.activeClassName}\n      activeLinkClassName={classes.activeLinkClassName}\n      previousClassName={classes.pageClassName}\n      nextClassName={classes.pageClassName}\n      previousLinkClassName={classes.pageLinkClassName}\n      nextLinkClassName={classes.pageLinkClassName}\n      breakClassName={classes.pageClassName}\n      breakLinkClassName={classes.pageLinkClassName}\n      disabledClassName={classes.disabledClassName}\n    />\n  );\n}\n\nPagination.propTypes = {\n  limit: PropTypes.number.isRequired,\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","export const TASK_STATUSES = {\n  NOT_DONE: 0,\n  DONE: 1,\n};\n\nexport const DEFAULT_LIMIT = 25;\nexport const DEFAULT_OFFSET = 0;\nexport const DEFAULT_STATUS_FILTER = '-1';\n\nexport const taskActions = {\n  None: 0,\n  ShowTaskInfo: 1,\n  EditTask: 2,\n  CreateTask: 3,\n  DeleteTask: 4,\n  TaskMarkDone: 5,\n};\n","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchBar from 'material-ui-search-bar';\nimport Pagination from './Pagination';\nimport { taskActions } from '../constants';\n\nconst StyledSearchBar = styled(SearchBar)({\n  marginBlockStart: '1em',\n  marginBlockEnd: '1em',\n  width: '95%',\n});\n\nconst StyledAddButton = styled(Button)({\n  minWidth: '3em',\n  minHeight: '2.5em',\n  fontSize: '1rem',\n  padding: '0',\n});\n\nclass TaskBoardHeader extends React.Component {\n  state = {\n    searchValue: '',\n  };\n\n  render() {\n    const {\n      limit, offset, tasksTotalNumber, onPageChange, onSearchRequested, setShowDialog,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Grid container alignItems=\"center\" justify=\"flex-start\" direction=\"row\">\n          <Grid item xs={1}>\n            <StyledAddButton\n              variant=\"contained\"\n              color=\"primary\"\n              aria-label=\"add\"\n              onClick={() => setShowDialog(taskActions.CreateTask)}\n            >\n              <AddIcon />\n            </StyledAddButton>\n          </Grid>\n          <Grid item xs={6}>\n            {!!tasksTotalNumber && (\n              <Pagination limit={limit} offset={offset} count={tasksTotalNumber} onPageChange={onPageChange} />\n            )}\n          </Grid>\n          <Grid item xs={5}>\n            <StyledSearchBar\n              value={this.state.searchValue}\n              onChange={newValue => this.setState({ searchValue: newValue })}\n              onCancelSearch={() => onSearchRequested(null)}\n              onRequestSearch={() => onSearchRequested(this.state.searchValue)}\n            />\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TaskBoardHeader;\n","import MuiBadge from '@material-ui/core/Badge';\nimport { styled } from '@material-ui/core/styles';\n\nconst DoneBadge = styled(MuiBadge)({\n  minWidth: '3rem',\n  padding: '0 6px',\n  textAlign: 'center',\n  // -webkit-box-sizing: 'border-box',\n  boxSizing: 'border-box',\n\n  fontWeight: '300',\n  fontSize: '0.9rem',\n  backgroundColor: '#26a69a',\n  borderRadius: '2px',\n\n  color: \"white\",\n});\n\nconst NotDoneBadge = styled(DoneBadge)({\n  backgroundColor: \"#337ab7\",\n});\n\nexport { DoneBadge, NotDoneBadge };\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Link from '@material-ui/core/Link';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { DoneBadge, NotDoneBadge } from './Badges';\n\nconst ActionsTableCell = styled(TableCell)({\n  // eliminates shrinking of action buttons cell when there is only one button\n  width: '25%',\n});\n\nexport default function TaskListItem(props) {\n  const task = props.data;\n  const isOwnedByUser = props.currentUserId === task.created_by;\n  const isTaskDone = task.status === 1;\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <Typography>\n          <Link component=\"button\" variant=\"body1\" onClick={() => props.onTaskNameClick()}>\n            {task.name}\n          </Link>\n        </Typography>\n      </TableCell>\n      <TableCell align=\"center\">\n        <Typography caption=\"body1\">{task.created_by_username}</Typography>\n      </TableCell>\n      <TableCell align=\"center\">\n        {task.accomplished_by && (\n          <React.Fragment>\n            <DoneBadge>{task.status_readable}</DoneBadge>\n            <Typography variant=\"caption\">\n              <span className=\"task-accomplished-by\">{`by ${task.accomplished_by_username}`}</span>\n            </Typography>\n          </React.Fragment>\n        )}\n        {!task.accomplished_by && <NotDoneBadge>{task.status_readable}</NotDoneBadge>}\n      </TableCell>\n      <ActionsTableCell align=\"center\">\n        {isOwnedByUser && (\n          <React.Fragment>\n            <IconButton aria-label=\"edit\" onClick={() => props.onTaskEditClick()}>\n              <EditIcon color=\"primary\" />\n            </IconButton>\n            <IconButton aria-label=\"delete\" onClick={() => props.onTaskDeleteClick()}>\n              <DeleteIcon color=\"primary\" />\n            </IconButton>\n          </React.Fragment>\n        )}\n        <IconButton aria-label=\"Mark as Done\" disabled={isTaskDone} onClick={() => props.onTaskMarkDoneClick()}>\n          <DoneIcon color={!isTaskDone ? 'primary' : 'disabled'} />\n        </IconButton>\n      </ActionsTableCell>\n    </TableRow>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction HeaderStatusFilterSelect(props) {\n  const classes = useStyles();\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <Select\n        className={classes.input}\n        native\n        value={props.statusFilter}\n        onChange={event => props.onStatusFilterChanged(event.target.value)}\n        input={<OutlinedInput margin=\"dense\" />}\n      >\n        <option value={-1}>All</option>\n        <option value={0}>Not Done</option>\n        <option value={1}>Done</option>\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default HeaderStatusFilterSelect;\n","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport MuiTable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport MuiPaper from '@material-ui/core/Paper';\nimport HeaderStatusFilterSelect from './HeaderStatusFilterSelect';\n\nconst Table = styled(MuiTable)({});\n\nconst Paper = styled(MuiPaper)({\n  width: '99%',\n  margin: 'auto',\n  maxHeight: '75vh',\n  overflow: 'auto',\n});\n\nconst StyledTableCell = styled(TableCell)({\n  backgroundColor: '#f5f5f5',\n  color: 'black',\n  fontSize: '1rem',\n});\n\nexport default function (props) {\n  return (\n    <Paper>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Name</StyledTableCell>\n            <StyledTableCell align=\"center\">Owner</StyledTableCell>\n            <StyledTableCell align=\"center\">\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  alignContent: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <div>Status</div>\n                <HeaderStatusFilterSelect\n                  statusFilter={props.statusFilter}\n                  onStatusFilterChanged={props.onStatusFilterChanged}\n                />\n              </div>\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">Actions</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{props.children}</TableBody>\n      </Table>\n    </Paper>\n  );\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport TaskListItem from './TaskListItem';\nimport TaskListTable from './Table';\nimport { taskActions } from '../constants';\n\nclass TaskList extends React.Component {\n  render() {\n    const { taskList } = this.props;\n    const { currentUserId, statusFilter } = this.props;\n    const { onStatusFilterChanged, setShowDialog } = this.props;\n\n    return (\n      <React.Fragment>\n        <TaskListTable statusFilter={statusFilter} onStatusFilterChanged={onStatusFilterChanged}>\n          {taskList.length > 0\n            && taskList.map(listItem => (\n              <TaskListItem\n                id={listItem.id}\n                key={listItem.id}\n                data={listItem}\n                currentUserId={currentUserId}\n                onTaskNameClick={() => setShowDialog(taskActions.ShowTaskInfo, listItem.id)}\n                onTaskEditClick={() => setShowDialog(taskActions.EditTask, listItem.id)}\n                onTaskDeleteClick={() => setShowDialog(taskActions.DeleteTask, listItem.id)}\n                onTaskMarkDoneClick={() => setShowDialog(taskActions.TaskMarkDone, listItem.id)}\n              />\n            ))}\n        </TaskListTable>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TaskList;\n","/* eslint-disable react/sort-comp */\nimport $ from 'jquery';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport qs from 'query-string';\nimport { TASK_STATUSES } from '../constants';\n\nclass ApiRequestor {\n  getRequestContext = (method, url, data, onSuccessHandler, onErrorHandler) => ({\n    type: method,\n    dataType: 'json',\n    url,\n    data,\n    context: this,\n    success: (obj, textStatus, jqXHR) => onSuccessHandler(obj),\n    error: (xhr, textStatus, error) => onErrorHandler(xhr, textStatus, error),\n  });\n\n  post = (url, data, onSuccessHandler, onErrorHandler) => {\n    const postContext = this.getRequestContext('POST', url, data, onSuccessHandler, onErrorHandler);\n    $.ajax(postContext);\n  };\n\n  patch = (url, data, onSuccessHandler, onErrorHandler) => {\n    const patchContext = this.getRequestContext('PATCH', url, data, onSuccessHandler, onErrorHandler);\n    $.ajax(patchContext);\n  };\n\n  delete = (url, onSuccessHandler, onErrorHandler) => {\n    const deleteContext = this.getRequestContext('DELETE', url, /* no data */ '', onSuccessHandler, onErrorHandler);\n    $.ajax(deleteContext);\n  };\n}\n\nclass TasksStateContainer extends React.Component {\n  static propTypes = {\n    query: PropTypes.exact({\n      searchValue: PropTypes.string.isRequired,\n      limit: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired,\n      statusFilter: PropTypes.string.isRequired,\n    }).isRequired,\n    onTotalNumberReceived: PropTypes.func.isRequired,\n  };\n\n  state = {\n    isLoaded: false,\n    taskList: [],\n    currentTotalNumber: 0,\n  };\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.query !== this.props.query) {\n      this.fetchTasks();\n    }\n  }\n\n  onEditTask = (taskId, partialData, onSuccess, onError) => {\n    const api = new ApiRequestor();\n    api.patch(\n      `/api/tasks/${taskId}/`,\n      partialData,\n      (task) => {\n        this.onEditSuccess(taskId, task);\n        onSuccess(task);\n      },\n      (xhr, textStatus, error) => {\n        this.onRequestError(taskId, xhr.status, error);\n        onError(xhr.status, error, xhr.responseJSON);\n      },\n    );\n  };\n\n  onCreateTask = (taskData, onSuccess, onError) => {\n    const api = new ApiRequestor();\n    api.post(\n      '/api/tasks/',\n      taskData,\n      (task) => {\n        this.onCreateSuccess(task);\n        onSuccess(task);\n      },\n      (xhr, textStatus, error) => {\n        this.onRequestError(undefined, xhr.status, error);\n        onError(xhr.status, error, xhr.responseJSON);\n      },\n    );\n  };\n\n  onDeleteTask = (taskId, onSuccess, onError) => {\n    const api = new ApiRequestor();\n    api.delete(\n      `/api/tasks/${taskId}/`,\n      () => {\n        this.onDeleteSuccess(taskId);\n        onSuccess();\n      },\n      (xhr, textStatus, error) => {\n        this.onRequestError(taskId, xhr.status, error);\n        onError(xhr.status, error, xhr.responseJSON.detail);\n      },\n    );\n  };\n\n  onTaskMarkDone = (taskId, onSuccess, onError) => {\n    const api = new ApiRequestor();\n    api.patch(\n      `/api/tasks/${taskId}/`,\n      { status: TASK_STATUSES.DONE },\n      (task) => {\n        this.onTaskMarkDoneSuccess(taskId, task);\n        onSuccess(task);\n      },\n      (xhr, textStatus, error) => {\n        this.onRequestError(taskId, xhr.status, error);\n        onError(xhr.status, error, xhr.responseJSON);\n      },\n    );\n  }\n\n  getTaskManageFuncs() {\n    return {\n      onEditTask: this.onEditTask,\n      onCreateTask: this.onCreateTask,\n      onDeleteTask: this.onDeleteTask,\n      onTaskMarkDone: this.onTaskMarkDone,\n    };\n  }\n\n  getQueryParams() {\n    const {\n      searchValue, limit, offset, statusFilter,\n    } = this.props.query;\n    const queryParams = { limit, offset };\n    if (statusFilter !== '-1') {\n      queryParams.status = statusFilter;\n    }\n    if (searchValue) {\n      queryParams.search = searchValue;\n    }\n\n    return queryParams;\n  }\n\n  fetchTasks() {\n    fetch(`api/tasks/?${qs.stringify(this.getQueryParams())}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState(\n            {\n              isLoaded: true,\n              taskList: result.results,\n              currentTotalNumber: result.count,\n            },\n            () => this.props.onTotalNumberReceived(result.count),\n          );\n        },\n        error => this.setState({ isLoaded: false, error }),\n      );\n  }\n\n  onEditSuccess = (taskId, serverResponseTask) => {\n    const modifiedList = [...this.state.taskList];\n    const idx = modifiedList.findIndex(task => task.id === taskId);\n    const modifiedTask = modifiedList[idx];\n\n    for (const prop in serverResponseTask) {\n      modifiedTask[prop] = serverResponseTask[prop];\n    }\n\n    this.setState({ taskList: modifiedList });\n  };\n\n  onCreateSuccess = (serverResponseTask) => {\n    let modifiedList = [...this.state.taskList];\n    modifiedList.unshift(serverResponseTask);\n    this.setState({ taskList: modifiedList });\n  }\n\n  onDeleteSuccess = (taskId) => {\n    let modifiedList = [...this.state.taskList];\n    const idx = modifiedList.findIndex(task => task.id === taskId);\n\n    modifiedList.splice(idx, 1);\n    this.setState({ taskList: modifiedList });\n  }\n\n  onTaskMarkDoneSuccess = (taskId, serverResponseTask) => {\n    return this.onEditSuccess(taskId, serverResponseTask);\n  }\n\n  onRequestError = (taskId, status, error) => {\n    console.log(status, error);\n  };\n\n  render() {\n    return this.props.children(this.getTaskManageFuncs(), this.state.taskList);\n  }\n}\n\nexport default TasksStateContainer;\n","import React from 'react';\nimport { withStyles, styled } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nexport const DialogContent = styled(MuiDialogContent)({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-evenly',\n  minWidth: '50ch',\n});\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n        <CloseIcon />\n      </IconButton>\n    </MuiDialogTitle>\n  );\n});\n\nexport default props => (\n  <Dialog open onClose={props.closeDialog} transitionDuration={{ enter: 50 }} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"customized-dialog-title\" onClose={props.closeDialog}>\n      {props.title}\n    </DialogTitle>\n    {props.children}\n  </Dialog>\n);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Typography from '@material-ui/core/Typography';\nimport { DoneBadge, NotDoneBadge } from '../Badges';\nimport TitledDialog, { DialogContent } from './TitledDialog';\n\nexport const taskInformationBody = task => (\n  <React.Fragment>\n    <Typography variant=\"body1\" component=\"div\">\n      <p>\n        <b>Name: </b>\n        {' '}\n        {task.name}\n      </p>\n    </Typography>\n    <Divider />\n    <Typography variant=\"body1\" component=\"div\">\n      <p>\n        <b>Created by: </b>\n        {' '}\n        {task.created_by_username}\n      </p>\n      <p>\n        <b>Status: </b>\n        {task.accomplished_by && <DoneBadge>{task.status_readable}</DoneBadge>}\n        {!task.accomplished_by && <NotDoneBadge>{task.status_readable}</NotDoneBadge>}\n      </p>\n    </Typography>\n    <Divider />\n    <Typography variant=\"body1\" component=\"div\">\n      <p>\n        <b>Description: </b>\n        {' '}\n        {task.description}\n      </p>\n    </Typography>\n  </React.Fragment>\n);\n\nexport default function TaskInfoDialog(props) {\n  const { taskObject: task } = props;\n\n  return (\n    <TitledDialog title=\"Task Information\" {...props}>\n      <DialogContent>{taskInformationBody(task)}</DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" onClick={props.closeDialog} color=\"primary\">\n          OK\n        </Button>\n      </DialogActions>\n    </TitledDialog>\n  );\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport { styled, makeStyles } from '@material-ui/core/styles';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport { TASK_STATUSES } from '../../constants';\n\nexport const StyledDialogContent = styled(MuiDialogContent)({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-evenly',\n  minWidth: '50ch',\n  overflow: 'visible',\n});\n\n// moves error message closer to the input\nexport const StyledErrorMessage = styled('div')({\n  margin: '-.85em 0',\n  color: 'red',\n  fontSize: '.85em',\n});\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: '1em 0',\n  },\n}));\n\nconst TaskFieldInput = ({\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const labelRef = React.useRef(null);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    setLabelWidth(labelRef.current.offsetWidth);\n  }, []);\n\n  return (\n    <FormControl className={classes.formControl} variant=\"outlined\" fullWidth>\n      <InputLabel ref={labelRef} htmlFor=\"component-outlined\">\n        {props.title}\n      </InputLabel>\n      <OutlinedInput id=\"component-outlined\" labelWidth={labelWidth} {...field} {...props} />\n    </FormControl>\n  );\n};\n\nconst TaskFieldSelectStatus = ({\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <FormControl className={classes.formControl} variant=\"outlined\" fullWidth>\n      <TextField\n        label={props.title}\n        select\n        SelectProps={{\n          native: true,\n        }}\n        variant=\"outlined\"\n        {...field}\n        {...props}\n      >\n        <option key={0} value={TASK_STATUSES.NOT_DONE}>\n          Not Done\n        </option>\n        <option key={1} value={TASK_STATUSES.DONE}>\n          Done\n        </option>\n      </TextField>\n    </FormControl>\n  );\n};\n\nexport function renderFormikForm(props) {\n  const errorText = msg => <StyledErrorMessage>{msg}</StyledErrorMessage>;\n  return ({\n    values, errors, dirty, status, touched, handleBlur, handleChange, handleSubmit, isSubmitting,\n  }) => (\n    <Form>\n      <StyledDialogContent>\n        {status && status.error && <div style={{ color: 'red' }}>{status.msg}</div>}\n        <Field type=\"text\" name=\"name\" title=\"Name\" component={TaskFieldInput} />\n        <ErrorMessage name=\"name\" render={errorText} />\n        <Field type=\"text\" name=\"status\" title=\"Status\" component={TaskFieldSelectStatus} />\n        <ErrorMessage name=\"status\" render={errorText} />\n        <Field multiline type=\"text\" name=\"description\" title=\"Description\" component={TaskFieldInput} />\n        <ErrorMessage name=\"description\" render={errorText} />\n      </StyledDialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" type=\"submit\" color=\"primary\" disabled={isSubmitting || !dirty}>\n          Apply\n        </Button>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={props.closeDialog}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Form>\n  );\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { renderFormikForm } from './CreateEditCommons';\nimport TitledDialog from './TitledDialog';\n\nclass EditDialog extends React.Component {\n  render() {\n    const { props } = this;\n\n    return (\n      <TitledDialog title=\"Edit Task\" {...props}>\n        <Formik\n          initialValues={{ ...props.taskObject }}\n          onSubmit={(values, actions) => {\n            const { name, status, description } = values;\n            props.onEditTask(\n              props.taskObject.id,\n              { name, status, description },\n              /* success handler: */\n              (data) => {\n                actions.setSubmitting(false);\n                props.enqueueSnackbar(`Task \"${name}\" updated.`, { variant: 'success' });\n                props.closeDialog();\n              },\n              /* error handler: */\n              (serverStatus, error, responseJSON) => {\n                actions.setSubmitting(false);\n                actions.setErrors(responseJSON);\n                if (serverStatus > 400) {\n                  actions.setStatus({\n                    error: true,\n                    msg: `Error ${serverStatus}: ${error}`,\n                  });\n                }\n              },\n            );\n          }}\n          render={renderFormikForm(props)}\n        />\n      </TitledDialog>\n    );\n  }\n}\n\nexport default EditDialog;\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { TASK_STATUSES } from '../../constants';\nimport { renderFormikForm } from './CreateEditCommons';\nimport TitledDialog from './TitledDialog';\n\nclass CreateDialog extends React.Component {\n  render() {\n    const { props } = this;\n\n    return (\n      <TitledDialog title=\"Create New Task\" {...props}>\n        <Formik\n          initialValues={{ status: TASK_STATUSES.NOT_DONE, name: '', description: '' }}\n          onSubmit={(values, actions) => {\n            const { name, status, description } = values;\n            props.onCreateTask(\n              { name, status, description },\n              /* success handler: */\n              (data) => {\n                actions.setSubmitting(false);\n                props.enqueueSnackbar(`Task \"${data.name}\" created.`, { variant: 'success' });\n                props.closeDialog();\n              },\n              /* error handler: */\n              (serverStatus, error, responseJSON) => {\n                actions.setSubmitting(false);\n                actions.setErrors(responseJSON);\n                if (serverStatus > 400) {\n                  actions.setStatus({\n                    error: true,\n                    msg: `Error ${serverStatus}: ${error}`,\n                  });\n                }\n              },\n            );\n          }}\n          render={renderFormikForm(props)}\n        />\n      </TitledDialog>\n    );\n  }\n}\n\nexport default CreateDialog;\n","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogContentText from '@material-ui/core/DialogContentText';\nimport TitledDialog, { DialogContent } from './TitledDialog';\nimport { taskInformationBody } from './InfoDialog';\n\nconst DialogContentText = styled(MuiDialogContentText)({\n  color: 'red',\n});\n\nexport default function TaskDeleteDialog(props) {\n  const { taskObject: task } = props;\n\n  return (\n    <TitledDialog title=\"Delete Task\" {...props}>\n      <DialogContent>\n        <DialogContentText>Are you sure you want to delete this task?</DialogContentText>\n        {taskInformationBody(task)}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={() => {\n            // closing the dialog early, otherwise after successful delete\n            // it will be rerendered with undefined task.\n            props.closeDialog();\n            props.onDeleteTask(\n              props.taskObject.id,\n              /* success handler: */\n              () => {\n                props.enqueueSnackbar(`Task \"${task.name}\" deleted.`, { variant: 'success' });\n              },\n              /* error handler: */\n              (serverStatus, error, responseText) => {\n                props.enqueueSnackbar(`Error ${serverStatus}: ${error}. ${responseText}`, { variant: 'error' });\n              },\n            );\n          }}\n        >\n          Delete\n        </Button>\n        <Button variant=\"outlined\" type=\"submit\" color=\"primary\" onClick={props.closeDialog}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </TitledDialog>\n  );\n}\n","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogContentText from '@material-ui/core/DialogContentText';\nimport TitledDialog, { DialogContent } from './TitledDialog';\nimport { taskInformationBody } from './InfoDialog';\n\nconst DialogContentText = styled(MuiDialogContentText)({\n  color: '#26a69a',\n});\n\nconst DoneButton = styled(Button)({\n  color: '#26a69a',\n  borderColor: 'inherit',\n});\n\nexport default function TaskMarkDoneDialog(props) {\n  const { taskObject: task } = props;\n\n  return (\n    <TitledDialog title=\"Mark as Done\" {...props}>\n      <DialogContent>\n        <DialogContentText>Are you sure you want to mark this task as \"Done\" by you?</DialogContentText>\n        {taskInformationBody(task)}\n      </DialogContent>\n      <DialogActions>\n        <DoneButton\n          variant=\"outlined\"\n          onClick={() => {\n            // closing the dialog early, otherwise after successful delete\n            // it will be rerendered with undefined task.\n            props.closeDialog();\n            props.onTaskMarkDone(\n              props.taskObject.id,\n              /* success handler: */\n              () => {\n                props.enqueueSnackbar(`Task \"${task.name}\" marked as \"Done\"`, { variant: 'success' });\n              },\n              /* error handler: */\n              (serverStatus, error, responseText) => {\n                props.enqueueSnackbar(`Error ${serverStatus}: ${error}. ${responseText}`, { variant: 'error' });\n              },\n            );\n          }}\n        >\n          Done\n        </DoneButton>\n        <Button variant=\"outlined\" type=\"submit\" onClick={props.closeDialog}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </TitledDialog>\n  );\n}\n","import React from 'react';\nimport { withSnackbar } from 'notistack';\nimport TaskInfoDialog from './dialogs/InfoDialog';\nimport TaskEditDialog from './dialogs/EditDialog';\nimport TaskCreateDialog from './dialogs/CreateDialog';\nimport TaskDeleteDialog from './dialogs/DeleteDialog';\nimport TaskMarkDoneDialog from './dialogs/MarkDoneDialog';\nimport { taskActions } from '../constants';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\n/*\n* HoC that provides the capability to show the Task related dialogs.\n*/\nconst withDialogs = (WrappedComponent) => {\n  class WithDialogs extends React.Component {\n    state = {\n      showDialog: {\n        actionType: taskActions.None,\n        taskId: undefined,\n      },\n    };\n\n    setShowDialog = (actionType, taskId) => {\n      this.setState({\n        showDialog: { actionType, taskId },\n      });\n    };\n\n    onDialogClose = () => {\n      this.setState({ showDialog: {} });\n    };\n\n    getDialog = (taskManageFuncs, taskList) => {\n      // In case some dialog was requested to be shown, prepares the dialog component\n      // and provides it with the event handlers.\n      const { actionType, taskId } = this.state.showDialog;\n      if (!actionType) {\n        return null;\n      }\n\n      let DialogComponent;\n      const dialogProps = {\n        closeDialog: this.onDialogClose,\n      };\n\n      switch (actionType) {\n        case taskActions.TaskMarkDone:\n          DialogComponent = withSnackbar(TaskMarkDoneDialog);\n          dialogProps.onTaskMarkDone = taskManageFuncs.onTaskMarkDone;\n          break;\n        case taskActions.DeleteTask:\n          DialogComponent = withSnackbar(TaskDeleteDialog);\n          dialogProps.onDeleteTask = taskManageFuncs.onDeleteTask;\n          break;\n        case taskActions.ShowTaskInfo:\n          DialogComponent = TaskInfoDialog;\n          break;\n        case taskActions.EditTask:\n          DialogComponent = withSnackbar(TaskEditDialog);\n          dialogProps.onEditTask = taskManageFuncs.onEditTask;\n          break;\n        case taskActions.CreateTask:\n          DialogComponent = withSnackbar(TaskCreateDialog);\n          dialogProps.onCreateTask = taskManageFuncs.onCreateTask;\n          break;\n        default:\n          DialogComponent = null;\n          break;\n      }\n      if (!DialogComponent) {\n        return null;\n      }\n\n      if (DialogComponent && taskId) {\n        dialogProps.taskObject = taskList.find(task => task.id === taskId);\n      }\n\n      return <DialogComponent {...dialogProps} />;\n    };\n\n    render() {\n      return <WrappedComponent setShowDialog={this.setShowDialog} getDialog={this.getDialog} {...this.props} />;\n    }\n  }\n\n  WithDialogs.displayName = `withApi(${getDisplayName(WrappedComponent)})`;\n  return WithDialogs;\n};\n\nexport default withDialogs;\n","import React from 'react';\nimport memoizeOne from 'memoize-one';\nimport { SnackbarProvider } from 'notistack';\nimport './App.css';\nimport { createMuiTheme, styled } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { blue } from '@material-ui/core/colors';\nimport NavBar from './components/NavBar';\nimport TaskBoardHeader from './components/TaskBoardHeader';\nimport TaskList from './components/TaskList';\nimport { DEFAULT_LIMIT, DEFAULT_OFFSET, DEFAULT_STATUS_FILTER } from './constants';\nimport TasksStateContainer from './components/TasksStateContainer';\nimport withDialogs from './components/withDialogs';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: blue[800] },\n  },\n});\n\nconst StyledDiv = styled('div')({\n  width: '85%',\n  margin: 'auto',\n  overflowX: 'auto',\n  padding: '1px',\n});\n\nconst getQueryObject = memoizeOne((searchValue, limit, offset, statusFilter) => ({\n  searchValue,\n  limit,\n  offset,\n  statusFilter,\n}));\n\nclass App extends React.Component {\n  state = {\n    currentUserId: null,\n    profileUrl: '',\n    fullName: '',\n    tasksTotalNumber: 0,\n    limit: DEFAULT_LIMIT,\n    offset: DEFAULT_OFFSET,\n    statusFilter: DEFAULT_STATUS_FILTER,\n    searchValue: '',\n  };\n\n  componentDidMount() {\n    fetch('api/globals/')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            tasksTotalNumber: result.tasks_total,\n            currentUserId: result.current_user,\n            profileUrl: result.profile_url,\n            fullName: result.fullname,\n          });\n        },\n        error => this.setState({ error }),\n      );\n  }\n\n  onPageChanged = (data) => {\n    const offset = Math.ceil(data.selected * this.state.limit);\n    this.setState({ offset });\n  };\n\n  onTaskStatusFilterChanged = (selectedValue) => {\n    if (this.state.statusFilter !== selectedValue) {\n      this.setState({\n        limit: DEFAULT_LIMIT,\n        offset: DEFAULT_OFFSET,\n        statusFilter: selectedValue,\n      });\n    }\n  };\n\n  onSearchRequested = (value) => {\n    if (this.state.searchValue !== value) {\n      this.setState({\n        searchValue: value,\n        limit: DEFAULT_LIMIT,\n        offset: DEFAULT_OFFSET,\n        statusFilter: DEFAULT_STATUS_FILTER,\n      });\n    }\n  };\n\n  onTasksTotalNumberReceived = (newNumber) => {\n    if (this.state.tasksTotalNumber !== newNumber) {\n      this.setState({ tasksTotalNumber: newNumber });\n    }\n  };\n\n  render() {\n    const {\n      searchValue, limit, offset, tasksTotalNumber, currentUserId, statusFilter,\n      profileUrl, fullName,\n    } = this.state;\n\n    const { setShowDialog, getDialog } = this.props;\n\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n          <SnackbarProvider anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={2000}>\n            <NavBar profileUrl={profileUrl} fullName={fullName} />\n            <StyledDiv>\n              <TaskBoardHeader\n                tasksTotalNumber={tasksTotalNumber}\n                limit={limit}\n                offset={offset}\n                onPageChange={this.onPageChanged}\n                onSearchRequested={this.onSearchRequested}\n                setShowDialog={setShowDialog}\n              />\n              <TasksStateContainer\n                query={getQueryObject(searchValue, limit, offset, statusFilter)}\n                onTotalNumberReceived={this.onTasksTotalNumberReceived}\n              >\n                {(taskManageFuncs, taskList) => (\n                  <React.Fragment>\n                    <TaskList\n                      taskList={taskList}\n                      currentUserId={currentUserId}\n                      statusFilter={statusFilter}\n                      onStatusFilterChanged={this.onTaskStatusFilterChanged}\n                      setShowDialog={setShowDialog}\n                    />\n                    {getDialog(taskManageFuncs, taskList)}\n                  </React.Fragment>\n                )}\n              </TasksStateContainer>\n            </StyledDiv>\n          </SnackbarProvider>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default withDialogs(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import jQuery from 'jquery';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ajaxCsrfSetup from './utils';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// setup jquery for CSRF tokens\njQuery.ajaxSetup({\n  // jQuery won't allow using the ajaxCsrfSetup function directly\n  beforeSend: ajaxCsrfSetup\n});\n","import $ from 'jquery';\n\n// --------------------------------------------------------------------\n//    Helpers\n// --------------------------------------------------------------------\n// CSRF helper functions taken directly from Django docs\nfunction csrfSafeMethod(method) {\n  // these HTTP methods do not require CSRF protection\n  return /^(GET|HEAD|OPTIONS|TRACE)$/i.test(method);\n}\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie != \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = $.trim(cookies[i]);\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) == name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nexport default function ajaxCsrfSetup(xhr, settings) {\n  if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n    // Send the token to same-origin, relative URLs only.\n    // Send the token only if the method warrants CSRF protection\n    // Using the CSRFToken value acquired earlier\n    const csrftoken = getCookie(\"csrftoken\");\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\n  }\n}"],"sourceRoot":""}